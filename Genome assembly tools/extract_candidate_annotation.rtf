{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red59\green35\blue34;\red0\green0\blue0;\red251\green2\blue7;
\red251\green2\blue7;\red253\green128\blue8;\red33\green255\blue6;\red33\green255\blue255;\red251\green2\blue255;
\red253\green128\blue8;\red0\green0\blue0;\red127\green127\blue127;\red33\green255\blue6;\red127\green127\blue127;
}
{\*\expandedcolortbl;;\csgenericrgb\c23317\c13541\c13291;\csgray\c0\c0;\cssrgb\c100000\c14913\c0;
\cssrgb\c100000\c14913\c0;\cssrgb\c100000\c57637\c0;\cssrgb\c0\c97680\c0;\cssrgb\c0\c99144\c100000;\cssrgb\c100000\c25279\c100000;
\cssrgb\c100000\c57637\c0;\csgray\c0;\cssrgb\c57046\c57047\c57046;\cssrgb\c0\c97680\c0;\cssrgb\c57046\c57047\c57046;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww28980\viewh21120\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \cb3 \CocoaLigature0 #This scripts extracts gene information for candidate regions from genome annotation files\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 #\cf2 \cb4 CANDIDATE_REGIONS.bed\cf2 \cb3  is a list of genomic regions with format:\
#chromosome	start	end\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
#Annotation files are available at Dryad repository https://doi.org/10.5061/dryad.x0k6djhng:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \cb5 #FILE_annot.gff3\cb3 \
\cb6 #FILE_maker_proteins.fa\
#FILE_abinitio_proteins.fa\cb3 \
\cb7 #FILE_maker_blast2go.txt\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 #FILE_abinitio_blast2go.txt\
\cb3 \
# make intersection with bedtools\
   bedtools intersect -loj -a \cb5 CANDIDATE_REGIONS.bed\cb3    -b \cb5 FILE_annot.gff3\cb3   > intersection.txt \
\
# then e.g. do:\
   grep -P "\\tmaker\\tgene" intersection.txt > \cb8 intersection.maker.gene.txt\cb3 \
   grep -P "\\tgene\\t" intersection.txt > intersection.gene.txt \
   grep -P "\\tmaker\\t" intersection.txt > intersection.all.maker.predicted.txt\
   grep -v "Parent=" intersection.txt |grep -v repeatmasker |cut -f1,2,3,7,8 > intersection.norepeat.short.txt\
   grep -v "Parent=" intersection.txt |grep -v repeatmasker > intersection.norepeat.long.txt\
paste intersection.norepeat.short.txt intersection.norepeat.long.txt > intersection.norepeat.comb.txt\
   sort -k1,5 intersection.norepeat.comb.txt > \cb9 intersection.norepeat.comb.sorted.txt\cb3 \
\
\
# create list \cb9 of abinitio\cb3  non-overlapping genes\
   grep  -P "\\tmatch\\t" \cb9 intersection.norepeat.comb.sorted.txt\cb3  > \cb9 intersection.abinit.non-overlap.gene.txt\cb3 \
\
# add gene name \
paste <(rev \cb8 intersection.maker.gene.txt\cb3  |cut -f1 -d"=" |rev) intersection.maker.gene.txt  > \cb8 intersection.maker.gene.name.txt\cb3 \
paste <(rev \cb9 intersection.abinit.non-overlap.gene.tx\cb3 t |cut -f1 -d"=" |rev ) intersection.abinit.non-overlap.gene.txt > \cb9 intersection.abinit.non-overlap.gene.name.txt\cb3 \
\
# link in the protein data from maker\
   ln -s ../../../maker-results/dc/\cb6 FILE_maker_proteins.fa\cb3 \
   ln -s ../../../maker-results/dc/\cb6 FILE_abinitio_proteins.fa\cb3 \
# convert "abinit-gene" into "processed-gene" in gene names\
   perl -p -i -e 's/abinit-gene/processed-gene/g' intersection.abinit.non-overlap.gene.name.txt    \
\
# \cb8 final list of maker approved genes\cb3 \
   cp \cb8 intersection.maker.gene.name.txt\cb3  \cb8 final.maker.gene.name.txt\cb3 \
\
# \cb9 create the final list of abinitio\cb3 , non-overlapping genes. Not all genes in above intersection.abinit.non.overlap.gene.name.txt are actually non-overlapping !!!\
   for g in `cut -f1 intersection.abinit.non-overlap.gene.name.txt `; do echo $g ; grep "$g" \cb10 FILE_abinitio_proteins.fa\cb3  ; done |grep ">"  |cut -f1 -d" " |tr -d ">" > final.non-overlapping.txt\
 for f in `cat final.non-overlapping.txt `; do grep $f intersection.abinit.non-overlap.gene.name.txt ; done > \cb9 final.abinit.non-overlap.gene.name.txt\cb3 \
\
\
# pull out proteins. Use extractFastaSeqs.pl from here: {\field{\*\fldinst{HYPERLINK "https://github.com/douglasgscofield/bioinfo"}}{\fldrslt https://github.com/douglasgscofield/bioinfo}}\
# maker approved:\
   for t in `cut -f1 \cb8 intersection.maker.gene.name.txt`\cb3  ; do grep $t \cb10 FILE_maker_proteins.fa\cb3  ; done |cut -f1 -d " " > tmp \
	cat tmp | sed 's/>//g' > tmp2\
	/My_programs/douglasgscofield/bioinfo/scripts/extractFastaSeqs.pl -i \cb10 FILE_maker_proteins.fa\cb3  -n tmp2 -o \cf11 \cb12 OUTFILE\cf2 \cb3 .maker.proteins.fasta\
\
# non-overlapping:\
   for t in `cut -f1 \cb9 final.abinit.non-overlap.gene.name.txt\cb3  `; do grep $t \cb10 FILE_abinitio_proteins.fa\cb3   ; done |cut -f1 -d" " > tmp\
	cat tmp | sed 's/>//g' > tmp2\
	/My_programs/douglasgscofield/bioinfo/scripts/extractFastaSeqs.pl -i \cb10 FILE_abinitio_proteins.fa\cb3   -n tmp2 -o \cb12 OUTFILE\cb3 .maker.non_overlapping_ab_initio.proteins.fasta \
# pull out the blast2go annotation\
	for g in `cut -f1 intersection.maker.gene.name.txt ` ; do echo -ne "$g\\t" ; grep $g   \cb13 FILE_maker_blast2go.txt\cb3   ; echo ; done |grep .  > \cf2 \cb14 OUTFILE\cf2 \cb3 .maker.gene.blast2go.annot.txt \
\
    for g in `cut -f1 final.abinit.non-overlap.gene.name.txt ` ; do echo -ne "$g\\t" ; grep $g   \cb13 FILE_abinitio_blast2go.txt\cb3   ; echo ; done |grep . > \cf2 \cb14 OUTFILE\cf2 \cb3 .abinitio.non-overlap.gene.blast2go.annot.txt \
}